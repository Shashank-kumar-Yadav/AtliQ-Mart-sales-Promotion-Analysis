
CREATE VIEW `after_promo` AS
WITH Promotions AS (
    SELECT
        event_id,
        base_price,
        promo_type,
        CASE
            WHEN promo_type = '50% OFF' THEN ROUND(base_price * 0.5, 2)
            WHEN promo_type = '25% OFF' THEN ROUND(base_price * 0.75, 2)
            WHEN promo_type = 'BOGOF' THEN ROUND(base_price / 2, 2)
            WHEN promo_type = '500 Cashback' THEN ROUND(base_price - 500, 2)
            WHEN promo_type = '33% OFF' THEN ROUND(base_price * 0.67, 2)
        END AS base_price_after_promo,
        CASE
            WHEN promo_type = 'BOGOF' THEN ROUND(`quantity_sold(after_promo)` * 2, 2)
            ELSE ROUND(`quantity_sold(after_promo)`, 2)
        END AS quantity_sold_after_promo
    FROM fact_events
),
RevenueCalculation AS (
    SELECT
        fe.event_id,
        fe.store_id,
        ds.city,
        fe.campaign_id,
        dc.campaign_name,
        fe.product_code,
        dp.product_name,
        dp.category,
        fe.base_price,
        fe.`quantity_sold(before_promo)`,
        fe.promo_type,
        p.quantity_sold_after_promo,
        p.base_price_after_promo,
        ROUND(fe.base_price * fe.`quantity_sold(before_promo)`, 2) AS revenue_before_promo,
        ROUND(p.base_price_after_promo * p.quantity_sold_after_promo, 2) AS revenue_after_promo
    FROM fact_events fe
    JOIN Promotions p ON fe.event_id = p.event_id
    JOIN dim_campaigns dc ON fe.campaign_id = dc.campaign_id
    JOIN dim_products dp ON fe.product_code = dp.product_code
    JOIN dim_stores ds ON fe.store_id = ds.store_id
)

SELECT
    rc.*,
    (rc.revenue_after_promo - rc.revenue_before_promo) as IR_revenue,
    (quantity_sold_after_promo - rc.`quantity_sold(before_promo)`) as ISU
FROM RevenueCalculation rc;
